%ifndef BUILD_SETUP_COMPLETE %include ../build_setup.defs

%ifndef CG_ROOT    CG_ROOT = ./bld/objects
CG_ROOT = $CG_ROOT_BASE/objects

%include perl/newobj.defs

#    OBJECT_NAME         - the name of the object we are going to generate
#    PARENT_PACKAGE      - (optional) name of the parent package, with trailing separators, eg "foo::".
#    OBJECT_PACKAGE_VAR  - generated cg variable used to refer to object package (default is $OBJECT_NAME:toupper)
#    _OBJECT_PACKAGE_VAR - generated cg variable used to refer to fully qualified object package.
#    OBJECT_DESCRIPTION  - (defaulted) description of object


###### MAIN

PARENT_PACKAGE := ${ECDUMP_PACKAGE}::

OBJECTLIST := << [
ecdumpImpl	ecdump implementation
ecProjects	collection of EC Projects
ecProject	object representing an EC Project
ecProcedures	collection of EC Procedures
ecProcedure	object representing an EC Procedure
ecProcedureSteps	collection of Procedure Steps
ecProcedureStep	object representing an EC Procedure Step
ecProps	collection of EC Properties
ecProp	object representing an EC Property
ecParameters	collection of EC Parameters
ecParameter	object representing a single EC Parameter
]

%call newobj_create_objects

#relegate newly generated objects to tmp files until I get it right:
ECHO_TXT = $OBJECT_USER_DEFS
echo	/ecdump_new.defs

ECHO_TXT = $CREATE_ACTUAL_OBJECTS
echo	/ecdump_new.cg

ECHO_TXT = $NEW_OBJ_EXAMPLES
echo	/new_objects.cg

#restore CG_ROOT:
CG_ROOT = $CG_ROOT_BASE

#
#pkgconfig.defs -  definitions for pkgconfig object.
#

#allows us to run stand-alone:
%ifdef BUILD_SETUP_COMPLETE %include build_setup.defs

{ ## header section
PL_PACKAGE = $PKGCONFIG_PACKAGE
PL_PACKAGE_DESCRIPTION = Configuration parameters for sqlpj package

#not a base class - use standard constuctor name:
PL_CONSTRUCTOR_NAME = new

PL_PKG_IMPORTS := << EOF
require "sqlpj.pl";
EOF
#%evalmacro PL_PKG_IMPORTS PL_PKG_IMPORTS

PL_PKG_ATTRIBUTES := << EOF
EOF
#%evalmacro PL_PKG_ATTRIBUTES PL_PKG_ATTRIBUTES
}

{ ## constructor section
PL_CONSTRUCTOR_BODY := << EOF
EOF
#%evalmacro PL_CONSTRUCTOR_BODY PL_CONSTRUCTOR_BODY

PL_OBJ_ATTRIBUTES := << [
'mProgName'      => undef,
'mVersionNumber' => "{=VERSION_STR=}",
'mVersionDate'   => "{=VERSION_DATE=}",
'mPathSeparator' => undef,
'mDebug'         => 0,
'mDDebug'        => 0,
'mQuiet'         => 0,
'mVerbose'       => 0,
#sqlpj related:
'mJdbcPropsFileName' => undef,
'mJdbcClassPath'     => undef,
'mJdbcDriverClass'   => undef,
'mJdbcUrl'           => undef,
'mJdbcUser'          => undef,
'mJdbcPassword'      => undef,
'mSqlpjImpl'   => undef,
'mSqlpjConfig' => undef,
#ecdump related:
'mOutputDirectory' => undef,
'mProjectList'     => undef,
'mDoClean'           => 0,
'mHaveProjects'    => 0,
'mDumpAllProjects' => 0,
'mHaveListCommand' => 0,
'mHaveDumpCommand' => 0,
]
%evalmacro PL_OBJ_ATTRIBUTES PL_OBJ_ATTRIBUTES

#this is for further initialzation of attributes, since hash init cannot be self-referential:
PL_POST_ATTRIBUTE_INIT := << EOF
#initialize project list to be a ref to an empty list (was not able to do this in the hash init).
$self->setProjectList([]);
EOF
#%evalmacro PL_POST_ATTRIBUTE_INIT PL_POST_ATTRIBUTE_INIT
}

{
#clear standard accessor accumulator:
getset_methods =

###########
#read/write (get/set) attributes:
###########
PL_ATTRIBUTE_NAME = ProgName
    %evalmacro >> getset_methods pl_getset
PL_ATTRIBUTE_NAME = PathSeparator
    %evalmacro >> getset_methods pl_getset
PL_ATTRIBUTE_NAME = Debug
    %evalmacro >> getset_methods pl_getset
PL_ATTRIBUTE_NAME = DDebug
    %evalmacro >> getset_methods pl_getset
PL_ATTRIBUTE_NAME = Verbose
    %evalmacro >> getset_methods pl_getset
PL_ATTRIBUTE_NAME = Quiet
    %evalmacro >> getset_methods pl_getset

#sqlpj related:
PL_ATTRIBUTE_NAME = JdbcClassPath
    %evalmacro >> getset_methods pl_getset
PL_ATTRIBUTE_NAME = JdbcDriverClass
    %evalmacro >> getset_methods pl_getset
PL_ATTRIBUTE_NAME = JdbcUrl
    %evalmacro >> getset_methods pl_getset
PL_ATTRIBUTE_NAME = JdbcUser
    %evalmacro >> getset_methods pl_getset
PL_ATTRIBUTE_NAME = JdbcPassword
    %evalmacro >> getset_methods pl_getset
PL_ATTRIBUTE_NAME = JdbcPropsFileName
    %evalmacro >> getset_methods pl_getset
PL_ATTRIBUTE_NAME = SqlpjConfig
    %evalmacro >> getset_methods pl_getset
PL_ATTRIBUTE_NAME = SqlpjImpl
    %evalmacro >> getset_methods pl_getset

#######
#ecdump related:
#######
PL_ATTRIBUTE_NAME = ProjectList
    # list attribute:
    %evalmacro >> getset_methods pl_getsetlist
PL_ATTRIBUTE_NAME = OutputDirectory
    %evalmacro >> getset_methods pl_getset
PL_ATTRIBUTE_NAME = DoClean
    %evalmacro >> getset_methods pl_getset
PL_ATTRIBUTE_NAME = HaveProjects
    %evalmacro >> getset_methods pl_getset
PL_ATTRIBUTE_NAME = DumpAllProjects
    %evalmacro >> getset_methods pl_getset
PL_ATTRIBUTE_NAME = HaveListCommand
    %evalmacro >> getset_methods pl_getset
PL_ATTRIBUTE_NAME = HaveDumpCommand
    %evalmacro >> getset_methods pl_getset

##########
#read-only attributes:
##########
PL_ATTRIBUTE_NAME = VersionNumber
%evalmacro >> getset_methods pl_attr_method
PL_ATTRIBUTE_NAME = VersionDate
%evalmacro >> getset_methods pl_attr_method
}

{
PL_PKG_METHODS := << [
sub initSqlpjConfig
{
    my ($self, $scfg) = @_;

    #init sqlpj configuration object:
    $self->setSqlpjConfig($scfg);

    #set program name used in sqlpj messages:
    $scfg->setProgName($self->getProgName());
    $scfg->setDebug  ($self->getDebug());
    $scfg->setDDebug ($self->getDDebug());
    $scfg->setQuiet  ($self->getQuiet());
    $scfg->setVerbose($self->getVerbose());

    #if user supplied a JDBC properties file ...
    if ( $self->getJdbcPropsFileName() ) {
        #... then parse it with sqlpj method ...
        $scfg->setJdbcPropsFileName($self->getJdbcPropsFileName());
        $scfg->parseJdbcPropertiesFile();

        #... and copy the results to our configuration:
        $self->copyJdbcConfigFrom($scfg);
    } else {
        #copy the jdbc config supplied by the user to the sqlpj config:
        $self->copyJdbcConfigTo($scfg);
    }
}

sub copyJdbcConfigFrom
{
    my ($self, $from) = @_;

    $self->setJdbcClassPath  ($from->getJdbcClassPath());
    $self->setJdbcDriverClass($from->getJdbcDriverClass());
    $self->setJdbcPassword   ($from->getJdbcPassword());
    $self->setJdbcUrl        ($from->getJdbcUrl());
    $self->setJdbcUser       ($from->getJdbcUser());
}

sub copyJdbcConfigTo
{
    my ($self, $to) = @_;

    $to->setJdbcClassPath  ($self->getJdbcClassPath());
    $to->setJdbcDriverClass($self->getJdbcDriverClass());
    $to->setJdbcPassword   ($self->getJdbcPassword());
    $to->setJdbcUrl        ($self->getJdbcUrl());
    $to->setJdbcUser       ($self->getJdbcUser());
}

{=$getset_methods:rtrim=}

sub update_static_class_attributes
{
}
]
%evalmacro PL_PKG_METHODS PL_PKG_METHODS
}
